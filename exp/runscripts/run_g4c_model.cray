#!/bin/bash
#help#
#***********************************************************************#
#                                                                       #
#     Name:           run_g4c_model.cray                                #
#                                                                       #
#     Function:       This script submits the acoplet                   #
#                     model script to the NQS queue.                    #
#                     It runs in bash.                                  #
#                                                                       #
#     Date:           November 04th, 2010.                              #
#     Last change:    November 04th, 2010.                              #
#                                                                       #
#     Valid Arguments for run_g4c_model.cray:                           #
#                                                                       #
#     First:       START: flag for model start:                         #
#                         help, clean, make, cold or warm               #
#     Second:     LABELI: initial forecasting label                     #
#     Third:      LABELC: final forecasting label for cold              #
#     Fourth:     LABELF: final forecasting label for warm              #
#                         if cold, then LABELF=LABELC                   #
#     Fifth:        PROC: number of task the MPI                        #
#     Sixth:         RES: Experiment Name                               #
#     Seventh:       NML: Name the NAMELIST                             #
#                                                                       #
#                  LABELx: yyyymmddhh                                   #
#                          yyyy = four digit year                       #
#                            mm = two digit month                       #
#                            dd = two digit day                         #
#                            hh = two digit hour                        #
#                                                                       #
#        cold  : for a single cold start run (no warm run after)        #
#        warm  : after a cold start run                                 #
#                                                                       #
#***********************************************************************#
#help#
if [ "${1}" = "help" -o -z "${1}" ]
then
cat < ${0} | sed -n '/^#help#/,/^#help#/p'
exit 0
fi
#
#       Testing Valid Arguments
#
if [ "${1}" != "clean" ]
then
if [ "${1}" != "make" ]
then
if [ "${1}" != "cold" ]
then
if [ "${1}" != "warm" ]
then
echo "First argument: ${1}, is wrong. Must be: clean, make, cold or warm"
exit 0
fi
fi
fi
fi
if [ "${1}" != "clean" -a "${1}" != "make" ]
then
if [ -z "${2}" ]
then
echo "LABELI is not set (yyyymmddhh)"
exit 0
fi
if [ -z "${3}" ]
then
echo "LABELC is not set (yyyymmddhh)"
exit 0
fi
if [ -z "${4}" ]
then
echo "LABELF is not set (yyyymmddhh)"
exit 0
fi
if [ -z "${5}" ]
then
echo "PROC is not set."
exit 0
fi
if [ -z "${6}" ]
then
echo "RES is not set."
exit 0
fi
if [ -z "${7}" ]
then
export NML="default"
else
export NML="${7}"
fi
export LABELI=${2}
export LABELC=${3}
export LABELF=${4}
if [ "${1}" = "cold" ]
then LABEL=${LABELI}
else LABEL=${LABELC}
fi
caltmp=$(printf "%.0f\n" "`echo \"(\`date +%s --date=\"${LABELF:0:8}\"\`-\`date +%s --date=\"${LABEL:0:8}\"\`)/86400\"|bc -l`")
#let caltmp=(`date +%s --date="${LABELF:0:8}"`-`date +%s --date="${LABELC:0:8}"`)/86400
fi
#
#  Set Environment
#
#. ./NAMELIST/NAMELIST.env.${NML}
export mod_st=${1}                              # flag the start model
days=$caltmp                                    # number of days to run
RES=${6}					# Experiment Name
npes=${5}                                       # number of processors
#
if [ "${mod_st}" = "clean" ]
then cd ${expdir}/exec
make -f ${root}/CPLD2.1/source/Make_cpldp1 clean
exit 0
fi
if [ "${mod_st}" = "make" ]
then cd ${expdir}/exec
. ${root}/MOM4p1/bin/environs.${comp} > make.${RUNTM}.out.txt 2>&1
make -f ${root}/CPLD2.1/source/Make_cpldp1  >> make.${RUNTM}.out.txt 2>&1
exit 0
fi
#
#if [ ! -s ${workdir}/RESTART/${LABELC:0:8}.tar ]
#then echo "The file ${LABELC:0:8}.tar isn't here, please check restart files!!!"
#exit 0
#fi
if [ ! -s ${workdir}/time_stamp.restart ]
then echo "`date +"%Y  %m  %d  %H  %M  %S  %h" --date="${LABEL:0:8}"`" >${workdir}/time_stamp.restart
fi
#
sed -e "s/\${trunc}/${trunc}/;s/\${LV}/${LV}/;s/\${dt_atmos}/${dt_atmos}/;
s/\${LABELI:8}/${LABELI:8}/;s/\${LABELI:6:2}/${LABELI:6:2}/;s/\${LABELI:4:2}/${LABELI:4:2}/;s/\${LABELI:0:4}/${LABELI:0:4}/;
s/\${LABELC:8}/${LABELC:8}/;s/\${LABELC:6:2}/${LABELC:6:2}/;s/\${LABELC:4:2}/${LABELC:4:2}/;s/\${LABELC:0:4}/${LABELC:0:4}/;
s/\${LABELF:8}/${LABELF:8}/;s/\${LABELF:6:2}/${LABELF:6:2}/;s/\${LABELF:4:2}/${LABELF:4:2}/;s/\${LABELF:0:4}/${LABELF:0:4}/;
s/\${rootexp}/${rootexp//\//\\/}/;s/\${workdir}/${workdir//\//\\/}/;s/\${TRUNC}/${TRUNC}/;s/\${LEV}/${LEV}/" ${agcm_namelist} > ${workdir}/MODELIN
sed -e "s/\${months}/${months}/;s/\${days}/${days}/;
s/\${dt_atmos}/${dt_atmos}/;s/\${dt_ocean}/${dt_ocean}/;s/\${dt_cpld}/${dt_cpld}/" ${ocean_namelist} > ${workdir}/input.nml

cat <<EOT1> ${workdir}/set_g4c_model.${platform}
#!/bin/bash
#PBS -l mppwidth=${npes}
#PBS -l walltime=${walltime}
#PBS -o tupa:${workdir}/set_g4c_model.${RUNTM}.out.txt
#PBS -j oe
#PBS -q pesq
#PBS -S /bin/bash
#PBS -V
#PBS -N M_${RES}
#
#  Runtime Environment
#
export MPICH_MAX_SHORT_MSG_SIZE=4096   # T126L64 npes=192
export MPICH_MAX_SHORT_MSG_SIZE=8000
#export MPICH_ABORT_ON_ERROR=1
#export MPICH_VERSION_DISPLAY=1
#export PMI_QUIET=1
export NC_BLKSZ=1M
umask 027
#
#  get data sets, input data and executable
#
cd ${workdir}
rm -f fort.11 fms.out time_stamp.out Dump.0???.0???

cp ${datatable}  data_table
cp ${diagtable}  diag_table
cp ${fieldtable} field_table
#cp -f time_stamp.restart  time_stamp.out

#
#  Run the model
#
cat <<EOT2>submit.${platform}
#!/bin/bash
umask 027
${executable}  < MODELIN
EOT2
chmod 740 submit.${platform}
echo "Diretorio       : \`pwd\`"
echo "Tempo inicial   : \`date\`"
runtimebegin=\`date +%s\`
time aprun -n ${npes} ./submit.${platform} >>fms.out
runtimeend=\`date +%s\`
timebetween=\`echo "\${runtimeend}-\${runtimebegin}"|bc -l\`
echo "Tempo final     : \`date\`"
echo "Tempo decorrido : \${timebetween} sec"
EOT1
chmod 740 ${workdir}/set_g4c_model.${platform}
#
#  Run G4C_model
#
echo "qsub ${workdir}/set_g4c_model.${platform}"
export JobIDmodel=`qsub ${workdir}/set_g4c_model.${platform}`
echo "JobIDmodel: ${JobIDmodel}"
./run_g4c_pos_m4g4.cray run ${npes} ${RES}
